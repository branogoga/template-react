{"version":3,"file":"react-intl.js","sources":["define-messages.mjs","../node_modules/intl-messageformat-parser/dist/types.mjs","../node_modules/intl-messageformat-parser/dist/parser.mjs","../node_modules/intl-messageformat-parser/dist/normalize.mjs","../node_modules/intl-messageformat-parser/dist/index.mjs","../node_modules/intl-format-cache/dist/index.mjs","../node_modules/intl-messageformat/dist/formatters.mjs","../node_modules/intl-messageformat/dist/core.mjs","../node_modules/intl-messageformat/dist/index.mjs","utils.mjs","components/injectIntl.mjs","components/createFormattedComponent.mjs","components/useIntl.mjs","format.mjs","../node_modules/intl-locales-supported/dist/index.mjs","components/provider.mjs","components/relative.mjs","components/plural.mjs","components/message.mjs","components/html-message.mjs","index.mjs"],"sourcesContent":["export default function defineMessages(messageDescriptors) {\n    // This simply returns what's passed-in because it's meant to be a hook for\n    // babel-plugin-react-intl.\n    return messageDescriptors;\n}\n","export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n})(TYPE || (TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isNumberSkeleton(el) {\n    return el.type === 0 /* number */;\n}\nexport function isDateSkeleton(el) {\n    return el.type === 1 /* date */;\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style\n    };\n}\n","// tslint:disable:only-arrow-functions\n// tslint:disable:object-literal-shorthand\n// tslint:disable:trailing-comma\n// tslint:disable:object-literal-sort-keys\n// tslint:disable:one-variable-per-declaration\n// tslint:disable:max-line-length\n// tslint:disable:no-consecutive-blank-lines\n// tslint:disable:align\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Generated by PEG.js v. 0.10.0 (ts-pegjs plugin v. 0.2.5 )\n//\n// https://pegjs.org/   https://github.com/metadevpro/ts-pegjs\nimport { TYPE, } from './types';\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\nexport { SyntaxError };\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { start: peg$parsestart };\n    var peg$startRuleFunction = peg$parsestart;\n    var peg$c0 = function (parts) {\n        return parts.join('');\n    };\n    var peg$c1 = function (messageText) {\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\n    };\n    var peg$c2 = peg$otherExpectation(\"argumentElement\");\n    var peg$c3 = \"{\";\n    var peg$c4 = peg$literalExpectation(\"{\", false);\n    var peg$c5 = \"}\";\n    var peg$c6 = peg$literalExpectation(\"}\", false);\n    var peg$c7 = function (value) {\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\n    };\n    var peg$c8 = peg$otherExpectation(\"numberSkeletonId\");\n    var peg$c9 = /^['\\/{}]/;\n    var peg$c10 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n    var peg$c11 = peg$anyExpectation();\n    var peg$c12 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n    var peg$c13 = \"/\";\n    var peg$c14 = peg$literalExpectation(\"/\", false);\n    var peg$c15 = function (option) { return option; };\n    var peg$c16 = peg$otherExpectation(\"numberSkeletonToken\");\n    var peg$c17 = function (stem, options) {\n        return { stem: stem, options: options };\n    };\n    var peg$c18 = function (tokens) {\n        return __assign({ type: 0 /* number */, tokens: tokens }, insertLocation());\n    };\n    var peg$c19 = \"::\";\n    var peg$c20 = peg$literalExpectation(\"::\", false);\n    var peg$c21 = function (skeleton) { return skeleton; };\n    var peg$c22 = function (style) { return style.replace(/\\s*$/, ''); };\n    var peg$c23 = \",\";\n    var peg$c24 = peg$literalExpectation(\",\", false);\n    var peg$c25 = \"number\";\n    var peg$c26 = peg$literalExpectation(\"number\", false);\n    var peg$c27 = function (value, type, style) {\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\n    };\n    var peg$c28 = function (pattern) {\n        return __assign({ type: 1 /* date */, pattern: pattern }, insertLocation());\n    };\n    var peg$c29 = \"date\";\n    var peg$c30 = peg$literalExpectation(\"date\", false);\n    var peg$c31 = \"time\";\n    var peg$c32 = peg$literalExpectation(\"time\", false);\n    var peg$c33 = \"plural\";\n    var peg$c34 = peg$literalExpectation(\"plural\", false);\n    var peg$c35 = \"selectordinal\";\n    var peg$c36 = peg$literalExpectation(\"selectordinal\", false);\n    var peg$c37 = \"offset:\";\n    var peg$c38 = peg$literalExpectation(\"offset:\", false);\n    var peg$c39 = function (value, pluralType, offset, options) {\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, location = _a.location;\n                all[id] = {\n                    value: value,\n                    location: location\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c40 = \"select\";\n    var peg$c41 = peg$literalExpectation(\"select\", false);\n    var peg$c42 = function (value, options) {\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, location = _a.location;\n                all[id] = {\n                    value: value,\n                    location: location\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c43 = \"=\";\n    var peg$c44 = peg$literalExpectation(\"=\", false);\n    var peg$c45 = function (id, value) {\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c46 = function (id, value) {\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c47 = /^[\\t-\\r \\x85\\u200E\\u200F\\u2028\\u2029]/;\n    var peg$c48 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\u200E\", \"\\u200F\", \"\\u2028\", \"\\u2029\"], false, false);\n    var peg$c49 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n    var peg$c50 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n    var peg$c51 = peg$otherExpectation(\"optional whitespace\");\n    var peg$c52 = /^[0-9]/;\n    var peg$c53 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c54 = function (digits) {\n        return parseInt(digits.join(''), 10);\n    };\n    var peg$c55 = peg$otherExpectation(\"apostrophe\");\n    var peg$c56 = \"'\";\n    var peg$c57 = peg$literalExpectation(\"'\", false);\n    var peg$c58 = peg$otherExpectation(\"double apostrophes\");\n    var peg$c59 = \"''\";\n    var peg$c60 = peg$literalExpectation(\"''\", false);\n    var peg$c61 = function () { return \"'\"; };\n    var peg$c62 = /^[{}]/;\n    var peg$c63 = peg$classExpectation([\"{\", \"}\"], false, false);\n    var peg$c64 = /^[^']/;\n    var peg$c65 = peg$classExpectation([\"'\"], true, false);\n    var peg$c66 = function (escapedChar, quotedChars) {\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\n    };\n    var peg$c67 = /^[^{}]/;\n    var peg$c68 = peg$classExpectation([\"{\", \"}\"], true, false);\n    var peg$c69 = peg$otherExpectation(\"keyword\");\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parsestart() {\n        var s0;\n        s0 = peg$parsemessage();\n        return s0;\n    }\n    function peg$parsemessage() {\n        var s0, s1;\n        s0 = [];\n        s1 = peg$parsemessageElement();\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            s1 = peg$parsemessageElement();\n        }\n        return s0;\n    }\n    function peg$parsemessageElement() {\n        var s0;\n        s0 = peg$parseliteralElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargumentElement();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parsesimpleFormatElement();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parsepluralElement();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parseselectElement();\n                    }\n                }\n            }\n        }\n        return s0;\n    }\n    function peg$parsemessageText() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsedoubleApostrophes();\n        if (s2 === peg$FAILED) {\n            s2 = peg$parsequotedString();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parseunquotedString();\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsedoubleApostrophes();\n                if (s2 === peg$FAILED) {\n                    s2 = peg$parsequotedString();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parseunquotedString();\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseliteralElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c1(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseargName() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsenumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parsekeyword();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseargumentElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                            s5 = peg$c5;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c6);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c7(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c2);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonId() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsepatternWhiteSpace();\n        if (s4 === peg$FAILED) {\n            if (peg$c9.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c10);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c11);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsepatternWhiteSpace();\n                if (s4 === peg$FAILED) {\n                    if (peg$c9.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c10);\n                        }\n                    }\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c11);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c8);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonTokenOption() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n            s1 = peg$c13;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c14);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c15(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c12);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonToken() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parsenumberSkeletonTokenOption();\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$parsenumberSkeletonTokenOption();\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c17(s2, s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c16);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeleton() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsenumberSkeletonToken();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsenumberSkeletonToken();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c18(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsenumberArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsemessageText();\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c22(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsenumberFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c25) {\n                                    s7 = peg$c25;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c26);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsenumberArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c5;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c6);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c27(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeSkeleton() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c28(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsedateOrTimeArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsedateOrTimeSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parsemessageText();\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c22(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 4) === peg$c29) {\n                                    s7 = peg$c29;\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c30);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 4) === peg$c31) {\n                                        s7 = peg$c31;\n                                        peg$currPos += 4;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c32);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsedateOrTimeArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c5;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c6);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c27(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsesimpleFormatElement() {\n        var s0;\n        s0 = peg$parsenumberFormatElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsedateOrTimeFormatElement();\n        }\n        return s0;\n    }\n    function peg$parsepluralElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c33) {\n                                    s7 = peg$c33;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c34);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 13) === peg$c35) {\n                                        s7 = peg$c35;\n                                        peg$currPos += 13;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c36);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = peg$currPos;\n                                                if (input.substr(peg$currPos, 7) === peg$c37) {\n                                                    s12 = peg$c37;\n                                                    peg$currPos += 7;\n                                                }\n                                                else {\n                                                    s12 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c38);\n                                                    }\n                                                }\n                                                if (s12 !== peg$FAILED) {\n                                                    s13 = peg$parse_();\n                                                    if (s13 !== peg$FAILED) {\n                                                        s14 = peg$parsenumber();\n                                                        if (s14 !== peg$FAILED) {\n                                                            s12 = [s12, s13, s14];\n                                                            s11 = s12;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s11;\n                                                            s11 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s11;\n                                                        s11 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s11;\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 === peg$FAILED) {\n                                                    s11 = null;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        s13 = [];\n                                                        s14 = peg$parsepluralOption();\n                                                        if (s14 !== peg$FAILED) {\n                                                            while (s14 !== peg$FAILED) {\n                                                                s13.push(s14);\n                                                                s14 = peg$parsepluralOption();\n                                                            }\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            s14 = peg$parse_();\n                                                            if (s14 !== peg$FAILED) {\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                                    s15 = peg$c5;\n                                                                    peg$currPos++;\n                                                                }\n                                                                else {\n                                                                    s15 = peg$FAILED;\n                                                                    if (peg$silentFails === 0) {\n                                                                        peg$fail(peg$c6);\n                                                                    }\n                                                                }\n                                                                if (s15 !== peg$FAILED) {\n                                                                    peg$savedPos = s0;\n                                                                    s1 = peg$c39(s3, s7, s11, s13);\n                                                                    s0 = s1;\n                                                                }\n                                                                else {\n                                                                    peg$currPos = s0;\n                                                                    s0 = peg$FAILED;\n                                                                }\n                                                            }\n                                                            else {\n                                                                peg$currPos = s0;\n                                                                s0 = peg$FAILED;\n                                                            }\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseselectElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargName();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c23;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c24);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c40) {\n                                    s7 = peg$c40;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c41);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c23;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c24);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = [];\n                                                s12 = peg$parseselectOption();\n                                                if (s12 !== peg$FAILED) {\n                                                    while (s12 !== peg$FAILED) {\n                                                        s11.push(s12);\n                                                        s12 = peg$parseselectOption();\n                                                    }\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\n                                                            s13 = peg$c5;\n                                                            peg$currPos++;\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                            if (peg$silentFails === 0) {\n                                                                peg$fail(peg$c6);\n                                                            }\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            peg$savedPos = s0;\n                                                            s1 = peg$c42(s3, s11);\n                                                            s0 = s1;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralRuleSelectValue() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c43;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c44);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsenumber();\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsekeyword();\n        }\n        return s0;\n    }\n    function peg$parseselectOption() {\n        var s0, s1, s2, s3, s4, s5, s6;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsekeyword();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c3;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c4);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s5 = peg$parsemessage();\n                        if (s5 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                                s6 = peg$c5;\n                                peg$currPos++;\n                            }\n                            else {\n                                s6 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                    peg$fail(peg$c6);\n                                }\n                            }\n                            if (s6 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c45(s2, s5);\n                                s0 = s1;\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralOption() {\n        var s0, s1, s2, s3, s4, s5, s6;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsepluralRuleSelectValue();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c3;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c4);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s5 = peg$parsemessage();\n                        if (s5 !== peg$FAILED) {\n                            if (input.charCodeAt(peg$currPos) === 125) {\n                                s6 = peg$c5;\n                                peg$currPos++;\n                            }\n                            else {\n                                s6 = peg$FAILED;\n                                if (peg$silentFails === 0) {\n                                    peg$fail(peg$c6);\n                                }\n                            }\n                            if (s6 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s1 = peg$c46(s2, s5);\n                                s0 = s1;\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepatternWhiteSpace() {\n        var s0;\n        if (peg$c47.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c48);\n            }\n        }\n        return s0;\n    }\n    function peg$parsepatternSyntax() {\n        var s0;\n        if (peg$c49.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c50);\n            }\n        }\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsepatternWhiteSpace();\n        while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parsepatternWhiteSpace();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c51);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumber() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c52.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c53);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                if (peg$c52.test(input.charAt(peg$currPos))) {\n                    s2 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c53);\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c54(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseapostrophe() {\n        var s0, s1;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s0 = peg$c56;\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c57);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c55);\n            }\n        }\n        return s0;\n    }\n    function peg$parsedoubleApostrophes() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c59) {\n            s1 = peg$c59;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c60);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c61();\n        }\n        s0 = s1;\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c58);\n            }\n        }\n        return s0;\n    }\n    function peg$parsequotedString() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c56;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c57);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            if (peg$c62.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c63);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (input.substr(peg$currPos, 2) === peg$c59) {\n                    s5 = peg$c59;\n                    peg$currPos += 2;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c60);\n                    }\n                }\n                if (s5 === peg$FAILED) {\n                    if (peg$c64.test(input.charAt(peg$currPos))) {\n                        s5 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c65);\n                        }\n                    }\n                }\n                while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (input.substr(peg$currPos, 2) === peg$c59) {\n                        s5 = peg$c59;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c60);\n                        }\n                    }\n                    if (s5 === peg$FAILED) {\n                        if (peg$c64.test(input.charAt(peg$currPos))) {\n                            s5 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c65);\n                            }\n                        }\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = input.substring(s3, peg$currPos);\n                }\n                else {\n                    s3 = s4;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                        s4 = peg$c56;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c57);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c66(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseunquotedString() {\n        var s0, s1;\n        s0 = peg$currPos;\n        if (peg$c67.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c68);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsekeyword() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsepatternWhiteSpace();\n        if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c11);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsepatternWhiteSpace();\n                if (s4 === peg$FAILED) {\n                    s4 = peg$parsepatternSyntax();\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c11);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c69);\n            }\n        }\n        return s0;\n    }\n    function insertLocation() {\n        return options && options.captureLocation ? {\n            location: location()\n        } : {};\n    }\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nexport var parse = peg$parse;\n","import { isPluralElement, isLiteralElement } from './types';\nimport { parse } from './parser';\nvar PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\n/**\n * Whether to convert `#` in plural rule options\n * to `{var, number}`\n * @param el AST Element\n * @param pluralStack current plural stack\n */\nexport function normalizeHashtagInPlural(els) {\n    els.forEach(function (el) {\n        // If we're encountering a plural el\n        if (!isPluralElement(el)) {\n            return;\n        }\n        // Go down the options and search for # in any literal element\n        Object.keys(el.options).forEach(function (id) {\n            var _a;\n            var opt = el.options[id];\n            // If we got a match, we have to split this\n            // and inject a NumberElement in the middle\n            var matchingLiteralElIndex = -1;\n            var literalEl = undefined;\n            for (var i = 0; i < opt.value.length; i++) {\n                var el_1 = opt.value[i];\n                if (isLiteralElement(el_1) && PLURAL_HASHTAG_REGEX.test(el_1.value)) {\n                    matchingLiteralElIndex = i;\n                    literalEl = el_1;\n                    break;\n                }\n            }\n            if (literalEl) {\n                var newValue = literalEl.value.replace(PLURAL_HASHTAG_REGEX, \"$1{\" + el.value + \", number}\");\n                var newEls = parse(newValue);\n                (_a = opt.value).splice.apply(_a, [matchingLiteralElIndex, 1].concat(newEls));\n            }\n            normalizeHashtagInPlural(opt.value);\n        });\n    });\n}\n","import { parse as pegParse } from './parser';\nimport { normalizeHashtagInPlural } from './normalize';\nexport * from './types';\nexport * from './parser';\nexport function parse(input, opts) {\n    var els = pegParse(input, opts);\n    if (!opts || opts.normalizeHashtagInPlural !== false) {\n        normalizeHashtagInPlural(els);\n    }\n    return els;\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n// -- Utilities ----------------------------------------------------------------\nfunction getCacheId(inputs) {\n    return JSON.stringify(inputs.map(function (input) {\n        return input && typeof input === 'object' ? orderedProps(input) : input;\n    }));\n}\nfunction orderedProps(obj) {\n    return Object.keys(obj)\n        .sort()\n        .map(function (k) {\n        var _a;\n        return (_a = {}, _a[k] = obj[k], _a);\n    });\n}\nvar memoizeFormatConstructor = function (FormatConstructor, cache) {\n    if (cache === void 0) { cache = {}; }\n    return function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var cacheId = getCacheId(args);\n        var format = cacheId && cache[cacheId];\n        if (!format) {\n            format = new ((_a = FormatConstructor).bind.apply(_a, [void 0].concat(args)))();\n            if (cacheId) {\n                cache[cacheId] = format;\n            }\n        }\n        return format;\n    };\n};\nexport default memoizeFormatConstructor;\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isArgumentElement, isLiteralElement, isDateElement, isTimeElement, isNumberElement, isSelectElement, isPluralElement } from 'intl-messageformat-parser';\nvar ESCAPE_HASH_REGEX = /\\\\#/g;\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, variableId) {\n        var _this = _super.call(this, msg) || this;\n        _this.variableId = variableId;\n        return _this;\n    }\n    return FormatError;\n}(Error));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value.replace(ESCAPE_HASH_REGEX, '#')\n            }\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value.replace(ESCAPE_HASH_REGEX, '#')\n            });\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new FormatError(\"The intl string context variable \\\"\" + varName + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\");\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                result.push({\n                    type: 0 /* literal */,\n                    value: typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : ''\n                });\n            }\n            else {\n                result.push({\n                    type: 1 /* argument */,\n                    value: value\n                });\n            }\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value)\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string' ? formats.time[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value)\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string' ? formats.number[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value)\n            });\n            continue;\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\nexport function formatToString(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, originalMessage);\n    // Hot path for straight simple msg translations\n    if (parts.length === 1) {\n        return parts[0].value;\n    }\n    return parts.reduce(function (all, part) { return (all += part.value); }, '');\n}\n// Singleton\nvar domParser;\nvar TOKEN_DELIMITER = '@@';\nvar TOKEN_REGEX = /@@(.*?)@@/g;\nvar counter = 0;\nfunction generateId() {\n    return Date.now() + \"_\" + ++counter;\n}\nfunction restoreRichPlaceholderMessage(text, objectParts) {\n    return text\n        .split(TOKEN_REGEX)\n        .filter(Boolean)\n        .map(function (c) { return objectParts[c] || c; });\n}\nexport function formatXMLMessage(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, originalMessage);\n    var objectParts = {};\n    var formattedMessage = parts.reduce(function (all, part) {\n        if (typeof part.value === 'string' || part.type === 0 /* literal */) {\n            return (all += part.value);\n        }\n        var id = generateId();\n        objectParts[id] = part.value;\n        return (all += \"\" + TOKEN_DELIMITER + id + TOKEN_DELIMITER);\n    }, '');\n    // Not designed to filter out aggressively\n    if (!~formattedMessage.indexOf('<')) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    if (!values) {\n        throw new FormatError('Message has placeholders but no values was given');\n    }\n    if (typeof DOMParser === 'undefined') {\n        throw new FormatError('Cannot format XML message without DOMParser');\n    }\n    if (!domParser) {\n        domParser = new DOMParser();\n    }\n    // XML, not HTML since HTMl is strict about self-closing tag\n    var dom = domParser.parseFromString(\"<template>\" + formattedMessage + \"</template>\", 'application/xml');\n    if (dom.getElementsByTagName('parsererror').length) {\n        throw new FormatError(\"Malformed XML message \" + dom.getElementsByTagName('parsererror')[0].innerHTML);\n    }\n    var content = dom.firstChild;\n    if (!content) {\n        throw new FormatError(\"Malformed XML message \" + formattedMessage);\n    }\n    var tagsToFormat = Object.keys(values).filter(function (varName) { return !!dom.getElementsByTagName(varName).length; });\n    // No tags to format\n    if (!tagsToFormat.length) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    var childNodes = Array.prototype.slice.call(content.childNodes);\n    return childNodes.reduce(function (reconstructedChunks, _a) {\n        var tagName = _a.tagName, outerHTML = _a.outerHTML, textContent = _a.textContent;\n        // Regular text\n        if (!tagName) {\n            var chunks = restoreRichPlaceholderMessage(textContent || '', objectParts);\n            return reconstructedChunks.concat(chunks);\n        }\n        // Legacy HTML\n        if (!values[tagName]) {\n            var chunks = restoreRichPlaceholderMessage(outerHTML, objectParts);\n            if (chunks.length === 1) {\n                return reconstructedChunks.concat([chunks[0]]);\n            }\n            return reconstructedChunks.concat(chunks);\n        }\n        // XML Tag replacement\n        var formatFnOrValue = values[tagName];\n        if (typeof formatFnOrValue === 'function') {\n            if (textContent == null) {\n                return reconstructedChunks.concat([\n                    formatFnOrValue(textContent || undefined)\n                ]);\n            }\n            var chunks = restoreRichPlaceholderMessage(textContent, objectParts);\n            return reconstructedChunks.concat([formatFnOrValue.apply(void 0, chunks)]);\n        }\n        return reconstructedChunks.concat([formatFnOrValue]);\n    }, []);\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { isArgumentElement, isLiteralElement, isDateElement, isTimeElement, isNumberElement, isSelectElement, isPluralElement } from 'intl-messageformat-parser';\nimport memoizeIntlConstructor from 'intl-format-cache';\nimport { formatToString, formatToParts, formatXMLMessage } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction resolveLocale(locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n    try {\n        return Intl.NumberFormat.supportedLocalesOf(locales, {\n            // IE11 localeMatcher `lookup` seems to convert `en` -> `en-US`\n            // but not other browsers,\n            localeMatcher: 'best fit'\n        })[0];\n    }\n    catch (e) {\n        return IntlMessageFormat.defaultLocale;\n    }\n}\n// TODO(skeleton): add skeleton support\nfunction prewarmFormatters(els, locales, formatters, formats) {\n    els\n        .filter(function (el) { return !isArgumentElement(el) && !isLiteralElement(el); })\n        .forEach(function (el) {\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n            formatters.getDateTimeFormat(locales, style);\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string' ? formats.time[el.style] : undefined;\n            formatters.getDateTimeFormat(locales, style);\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string' ? formats.number[el.style] : undefined;\n            formatters.getNumberFormat(locales, style);\n        }\n        if (isSelectElement(el)) {\n            Object.keys(el.options).forEach(function (id) {\n                return prewarmFormatters(el.options[id].value, locales, formatters, formats);\n            });\n        }\n        if (isPluralElement(el)) {\n            formatters.getPluralRules(locales, { type: el.pluralType });\n            Object.keys(el.options).forEach(function (id) {\n                return prewarmFormatters(el.options[id].value, locales, formatters, formats);\n            });\n        }\n    });\n}\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign({}, (c1 || {}), (c2 || {}), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign({}, c1[k], (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nexport function createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {}\n    }; }\n    return {\n        getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n        getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n        getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules)\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {}\n        };\n        this.format = function (values) {\n            return formatToString(_this.ast, _this.locale, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locale, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.formatXMLMessage = function (values) {\n            return formatXMLMessage(_this.ast, _this.locale, _this.formatters, _this.formats, values, _this.message);\n        };\n        this.resolvedOptions = function () { return ({ locale: _this.locale }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message);\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locale = resolveLocale(locales || []);\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n        prewarmFormatters(this.ast, this.locale, this.formatters, this.formats);\n    }\n    IntlMessageFormat.defaultLocale = 'en';\n    IntlMessageFormat.__parse = undefined;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency'\n            },\n            percent: {\n                style: 'percent'\n            }\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit'\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric'\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric'\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric'\n            }\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric'\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric'\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short'\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short'\n            }\n        }\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\nexport default IntlMessageFormat;\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nimport { parse } from 'intl-messageformat-parser';\nimport IntlMessageFormat from './core';\nIntlMessageFormat.__parse = parse;\nexport * from './formatters';\nexport * from './core';\nexport default IntlMessageFormat;\n","/*\nHTML escaping is the same as React's\n(on purpose.) Therefore, it has the following Copyright and Licensing:\n\nCopyright 2013-2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the LICENSE\nfile in the root directory of React's source tree.\n*/\nimport * as React from 'react';\nimport IntlMessageFormat from 'intl-messageformat';\nimport memoizeIntlConstructor from 'intl-format-cache';\nconst invariant = require('invariant');\nconst ESCAPED_CHARS = {\n    38: '&amp;',\n    62: '&gt;',\n    60: '&lt;',\n    34: '&quot;',\n    39: '&#x27;',\n};\nconst UNSAFE_CHARS_REGEX = /[&><\"']/g;\nexport function escape(str) {\n    return ('' + str).replace(UNSAFE_CHARS_REGEX, match => ESCAPED_CHARS[match.charCodeAt(0)]);\n}\nexport function filterProps(props, whitelist, defaults = {}) {\n    return whitelist.reduce((filtered, name) => {\n        if (props.hasOwnProperty(name)) {\n            filtered[name] = props[name];\n        }\n        else if (defaults.hasOwnProperty(name)) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport function createError(message, exception) {\n    const eMsg = exception ? `\\n${exception.stack}` : '';\n    return `[React Intl] ${message}${eMsg}`;\n}\nexport function defaultErrorHandler(error) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n}\nexport const DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    textComponent: React.Fragment,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n    };\n}\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache = createIntlCache()) {\n    return {\n        getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat, cache.dateTime),\n        getNumberFormat: memoizeIntlConstructor(Intl.NumberFormat, cache.number),\n        getMessageFormat: memoizeIntlConstructor(IntlMessageFormat, cache.message),\n        getRelativeTimeFormat: memoizeIntlConstructor(Intl.RelativeTimeFormat, cache.relativeTime),\n        getPluralRules: memoizeIntlConstructor(Intl.PluralRules, cache.pluralRules),\n    };\n}\n","import * as React from 'react';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nconst hoistNonReactStatics = require('hoist-non-react-statics');\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nconst IntlContext = React.createContext(null);\nconst { Consumer: IntlConsumer, Provider: IntlProvider } = IntlContext;\nexport const Provider = IntlProvider;\nexport const Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    const { intlPropName = 'intl', forwardRef = false, enforceContext = true } = options || {};\n    const WithIntl = props => (React.createElement(IntlConsumer, null, intl => {\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        return (React.createElement(WrappedComponent, Object.assign({}, props, {\n            [intlPropName]: intl,\n        }, { ref: forwardRef ? props.forwardedRef : null })));\n    }));\n    WithIntl.displayName = `injectIntl(${getDisplayName(WrappedComponent)})`;\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef((props, ref) => (React.createElement(WithIntl, Object.assign({}, props, { forwardedRef: ref })))), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n","import * as React from 'react';\nimport withIntl from './injectIntl';\nexport default function createFormattedComponent(type) {\n    const Component = props => {\n        const { value, children, intl: { [type]: formatFn, textComponent: Text }, } = props;\n        let formattedValue = formatFn(value, props);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        if (Text) {\n            return React.createElement(Text, null, formattedValue);\n        }\n        // Work around @types/react where React.FC cannot return string\n        return formattedValue;\n    };\n    Component.displayName =\n        type === 'formatDate'\n            ? 'FormattedDate'\n            : type === 'formatTime'\n                ? 'FormattedTime'\n                : 'FormattedNumber';\n    return {\n        Component: withIntl(Component),\n    };\n}\n","import { useContext } from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    const intl = useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nconst invariant = require('invariant');\nimport { createError, escape, filterProps } from './utils';\nimport { TYPE } from 'intl-messageformat-parser';\nconst DATE_TIME_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n];\nconst NUMBER_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n];\nconst RELATIVE_FORMAT_OPTIONS = [\n    'numeric',\n    'style',\n];\nconst PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nfunction getNamedFormat(formats, type, name, onError) {\n    const formatType = formats && formats[type];\n    let format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(createError(`No ${type} format named: ${name}`));\n}\n/**\n * Escape a raw msg when we run in prod mode\n * https://github.com/formatjs/formatjs/blob/master/packages/intl-messageformat-parser/src/parser.pegjs#L155\n */\nfunction escapeUnformattedMessage(msg) {\n    return msg.replace(/'\\{(.*?)\\}'/g, `{$1}`);\n}\nexport function formatDate({ locale, formats, onError, timeZone, }, state, value, options = {}) {\n    const { format } = options;\n    let defaults = Object.assign({}, (timeZone && { timeZone }), (format && getNamedFormat(formats, 'date', format, onError)));\n    let filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    try {\n        return state.getDateTimeFormat(locale, filteredOptions).format(value);\n    }\n    catch (e) {\n        onError(createError('Error formatting date.', e));\n    }\n    return String(value);\n}\nexport function formatTime({ locale, formats, onError, timeZone, }, state, value, options = {}) {\n    const { format } = options;\n    let defaults = Object.assign({}, (timeZone && { timeZone }), (format && getNamedFormat(formats, 'time', format, onError)));\n    let filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (!filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = Object.assign({}, filteredOptions, { hour: 'numeric', minute: 'numeric' });\n    }\n    try {\n        return state.getDateTimeFormat(locale, filteredOptions).format(value);\n    }\n    catch (e) {\n        onError(createError('Error formatting time.', e));\n    }\n    return String(value);\n}\nexport function formatRelativeTime({ locale, formats, onError, }, state, value, unit = 'second', options = {}) {\n    const { format } = options;\n    let defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    let filteredOptions = filterProps(options, RELATIVE_FORMAT_OPTIONS, defaults);\n    try {\n        return state\n            .getRelativeTimeFormat(locale, filteredOptions)\n            .format(value, unit);\n    }\n    catch (e) {\n        onError(createError('Error formatting relative time.', e));\n    }\n    return String(value);\n}\nexport function formatNumber({ locale, formats, onError, }, state, value, options = {}) {\n    const { format } = options;\n    let defaults = (format && getNamedFormat(formats, 'number', format, onError)) || {};\n    let filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    try {\n        return state.getNumberFormat(locale, filteredOptions).format(value);\n    }\n    catch (e) {\n        onError(createError('Error formatting number.', e));\n    }\n    return String(value);\n}\nexport function formatPlural({ locale, onError }, state, value, options = {}) {\n    let filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return state.getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(createError('Error formatting plural.', e));\n    }\n    return 'other';\n}\nexport function formatMessage({ locale, formats, messages, defaultLocale, defaultFormats, onError, }, state, messageDescriptor = { id: '' }, values = {}) {\n    const { id, defaultMessage } = messageDescriptor;\n    // `id` is a required field of a Message Descriptor.\n    invariant(id, '[React Intl] An `id` must be provided to format a message.');\n    const message = messages && messages[id];\n    const hasValues = Object.keys(values).length > 0;\n    // Avoid expensive message formatting for simple messages without values. In\n    // development messages will always be formatted in case of missing values.\n    if (!hasValues && process.env.NODE_ENV === 'production') {\n        const val = message || defaultMessage || id;\n        if (typeof val === 'string') {\n            return escapeUnformattedMessage(val);\n        }\n        invariant(val.length === 1 && val[0].type === TYPE.literal, 'Message has placeholders but no values was provided');\n        return val[0].value;\n    }\n    let formattedMessageParts = [];\n    if (message) {\n        try {\n            let formatter = state.getMessageFormat(message, locale, formats, {\n                formatters: state,\n            });\n            formattedMessageParts = formatter.formatXMLMessage(values);\n        }\n        catch (e) {\n            onError(createError(`Error formatting message: \"${id}\" for locale: \"${locale}\"` +\n                (defaultMessage ? ', using default message as fallback.' : ''), e));\n        }\n    }\n    else {\n        // This prevents warnings from littering the console in development\n        // when no `messages` are passed into the <IntlProvider> for the\n        // default locale, and a default message is in the source.\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            onError(createError(`Missing message: \"${id}\" for locale: \"${locale}\"` +\n                (defaultMessage ? ', using default message as fallback.' : '')));\n        }\n    }\n    if (!formattedMessageParts.length && defaultMessage) {\n        try {\n            let formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n            formattedMessageParts = formatter.formatXMLMessage(values);\n        }\n        catch (e) {\n            onError(createError(`Error formatting the default message for: \"${id}\"`, e));\n        }\n    }\n    if (!formattedMessageParts.length) {\n        onError(createError(`Cannot format message: \"${id}\", ` +\n            `using message ${message || defaultMessage ? 'source' : 'id'} as fallback.`));\n        if (typeof message === 'string') {\n            return message || defaultMessage || id;\n        }\n        return defaultMessage || id;\n    }\n    if (formattedMessageParts.length === 1 &&\n        typeof formattedMessageParts[0] === 'string') {\n        return formattedMessageParts[0] || defaultMessage || id;\n    }\n    return formattedMessageParts;\n}\nexport function formatHTMLMessage(config, state, messageDescriptor = { id: '' }, rawValues = {}) {\n    // Process all the values before they are used when formatting the ICU\n    // Message string. Since the formatted message might be injected via\n    // `innerHTML`, all String-based values need to be HTML-escaped.\n    let escapedValues = Object.keys(rawValues).reduce((escaped, name) => {\n        let value = rawValues[name];\n        escaped[name] = typeof value === 'string' ? escape(value) : value;\n        return escaped;\n    }, {});\n    return formatMessage(config, state, messageDescriptor, escapedValues);\n}\nexport const formatters = {\n    formatNumber,\n    formatDate,\n    formatTime,\n    formatMessage,\n    formatPlural,\n    formatHTMLMessage,\n    formatRelativeTime,\n};\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar DEFAULT_CONSTRUCTORS = [\n    Intl.DateTimeFormat,\n    Intl.NumberFormat,\n    Intl.PluralRules\n];\nexport default function areIntlLocalesSupported(locales, constructorsToCheck) {\n    if (constructorsToCheck === void 0) { constructorsToCheck = DEFAULT_CONSTRUCTORS; }\n    if (typeof Intl === 'undefined') {\n        return false;\n    }\n    if (!locales) {\n        throw new Error('locales must be supplied.');\n    }\n    if (!Array.isArray(locales)) {\n        locales = [locales];\n    }\n    var intlConstructors = constructorsToCheck.filter(Boolean);\n    if (intlConstructors.length === 0) {\n        return false;\n    }\n    return intlConstructors.every(function (intlConstructor) {\n        return intlConstructor.supportedLocalesOf(locales).length === locales.length;\n    });\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { createError, DEFAULT_INTL_CONFIG, createFormatters, invariantIntlContext, createIntlCache, } from '../utils';\nimport { formatNumber, formatRelativeTime, formatDate, formatTime, formatPlural, formatHTMLMessage, formatMessage, } from '../format';\nimport areIntlLocalesSupported from 'intl-locales-supported';\nconst shallowEquals = require('shallow-equal/objects');\nexport default class IntlProvider extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.cache = createIntlCache();\n        this.state = {\n            cache: this.cache,\n            intl: undefined,\n            prevProps: {\n                locale: this.props.locale,\n            },\n        };\n    }\n    static getDerivedStateFromProps(props, { prevProps, cache }) {\n        const { locale, timeZone, formats, textComponent, messages, defaultLocale, defaultFormats, onError, } = props;\n        const filteredProps = {\n            locale,\n            timeZone,\n            formats,\n            textComponent,\n            messages,\n            defaultLocale,\n            defaultFormats,\n            onError,\n        };\n        if (!shallowEquals(prevProps, filteredProps)) {\n            return {\n                intl: createIntl(filteredProps, cache),\n                prevProps: filteredProps,\n            };\n        }\n        return null;\n    }\n    render() {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    }\n}\nIntlProvider.displayName = 'IntlProvider';\nIntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    const formatters = createFormatters(cache);\n    const resolvedConfig = Object.assign({}, DEFAULT_INTL_CONFIG, config);\n    if (!resolvedConfig.locale ||\n        !areIntlLocalesSupported(resolvedConfig.locale)) {\n        const { locale, defaultLocale, onError } = resolvedConfig;\n        if (typeof onError === 'function') {\n            onError(createError(`Missing locale data for locale: \"${locale}\". ` +\n                `Using default locale: \"${defaultLocale}\" as fallback.`));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    return Object.assign({}, resolvedConfig, { formatters, formatNumber: formatNumber.bind(undefined, resolvedConfig, formatters), formatRelativeTime: formatRelativeTime.bind(undefined, resolvedConfig, formatters), formatDate: formatDate.bind(undefined, resolvedConfig, formatters), formatTime: formatTime.bind(undefined, resolvedConfig, formatters), formatPlural: formatPlural.bind(undefined, resolvedConfig, formatters), formatMessage: formatMessage.bind(undefined, resolvedConfig, formatters), formatHTMLMessage: formatHTMLMessage.bind(undefined, resolvedConfig, formatters) });\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nconst invariant = require('invariant');\nconst MINUTE = 60;\nconst HOUR = 60 * 60;\nconst DAY = 60 * 60 * 24;\nfunction selectUnit(seconds) {\n    const absValue = Math.abs(seconds);\n    if (absValue < MINUTE) {\n        return 'second';\n    }\n    if (absValue < HOUR) {\n        return 'minute';\n    }\n    if (absValue < DAY) {\n        return 'hour';\n    }\n    return 'day';\n}\nfunction getDurationInSeconds(unit) {\n    switch (unit) {\n        case 'second':\n            return 1;\n        case 'minute':\n            return MINUTE;\n        case 'hour':\n            return HOUR;\n        default:\n            return DAY;\n    }\n}\nfunction valueToSeconds(value, unit) {\n    if (!value) {\n        return 0;\n    }\n    switch (unit) {\n        case 'second':\n            return value;\n        case 'minute':\n            return value * MINUTE;\n        default:\n            return value * HOUR;\n    }\n}\nconst INCREMENTABLE_UNITS = ['second', 'minute', 'hour'];\nfunction canIncrement(unit = 'second') {\n    return INCREMENTABLE_UNITS.includes(unit);\n}\nfunction verifyProps(updateIntervalInSeconds, unit) {\n    invariant(!updateIntervalInSeconds || (updateIntervalInSeconds && canIncrement(unit)), 'Cannot schedule update with unit longer than hour');\n}\nexport default class FormattedRelativeTime extends React.PureComponent {\n    constructor(props, context) {\n        super(props);\n        // Public for testing\n        this._updateTimer = null;\n        this.state = {\n            prevUnit: this.props.unit,\n            prevValue: this.props.value,\n            currentValueInSeconds: canIncrement(this.props.unit)\n                ? valueToSeconds(this.props.value, this.props.unit)\n                : 0,\n        };\n        invariantIntlContext(context);\n        verifyProps(props.updateIntervalInSeconds, props.unit);\n    }\n    scheduleNextUpdate({ updateIntervalInSeconds, unit }, { currentValueInSeconds }) {\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n        // If there's no interval and we cannot increment this unit, do nothing\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\n            return;\n        }\n        // Figure out the next interesting time\n        const nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\n        const nextUnit = selectUnit(nextValueInSeconds);\n        // We've reached the max auto incrementable unit, don't schedule another update\n        if (nextUnit === 'day') {\n            return;\n        }\n        const unitDuration = getDurationInSeconds(nextUnit);\n        const remainder = nextValueInSeconds % unitDuration;\n        const prevInterestingValueInSeconds = nextValueInSeconds - remainder;\n        const nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\n            ? prevInterestingValueInSeconds - unitDuration\n            : prevInterestingValueInSeconds;\n        const delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\n        this._updateTimer = setTimeout(() => this.setState({\n            currentValueInSeconds: nextInterestingValueInSeconds,\n        }), delayInSeconds * 1e3);\n    }\n    componentDidMount() {\n        this.scheduleNextUpdate(this.props, this.state);\n    }\n    componentDidUpdate() {\n        this.scheduleNextUpdate(this.props, this.state);\n    }\n    componentWillUnmount() {\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n    }\n    static getDerivedStateFromProps(props, state) {\n        if (props.unit !== state.prevUnit || props.value !== state.prevValue) {\n            return {\n                prevValue: props.value,\n                prevUnit: props.unit,\n                currentValueInSeconds: canIncrement(props.unit)\n                    ? valueToSeconds(props.value, props.unit)\n                    : 0,\n            };\n        }\n        return null;\n    }\n    render() {\n        const { formatRelativeTime, textComponent: Text } = this.context;\n        const { children, value, unit, updateIntervalInSeconds } = this.props;\n        const { currentValueInSeconds } = this.state;\n        let currentValue = value || 0;\n        let currentUnit = unit;\n        if (canIncrement(unit) &&\n            currentValueInSeconds &&\n            updateIntervalInSeconds) {\n            currentUnit = selectUnit(currentValueInSeconds);\n            const unitDuration = getDurationInSeconds(currentUnit);\n            currentValue = Math.round(currentValueInSeconds / unitDuration);\n        }\n        const formattedRelativeTime = formatRelativeTime(currentValue, currentUnit, Object.assign({}, this.props));\n        if (typeof children === 'function') {\n            return children(formattedRelativeTime);\n        }\n        if (Text) {\n            return React.createElement(Text, null, formattedRelativeTime);\n        }\n        return formattedRelativeTime;\n    }\n}\nFormattedRelativeTime.displayName = 'FormattedRelativeTime';\nFormattedRelativeTime.defaultProps = {\n    value: 0,\n    unit: 'second',\n};\nFormattedRelativeTime.contextType = Context;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nconst FormattedPlural = props => {\n    const { value, other, children, intl: { formatPlural, textComponent: Text }, } = props;\n    let pluralCategory = formatPlural(value, props);\n    let formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default withIntl(FormattedPlural);\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nconst shallowEquals = require('shallow-equal/objects');\nimport { formatMessage as baseFormatMessage } from '../format';\nimport { invariantIntlContext, DEFAULT_INTL_CONFIG, createFormatters, } from '../utils';\nconst defaultFormatMessage = (descriptor, values) => {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error('[React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry. Using default message as fallback.');\n    }\n    return baseFormatMessage(Object.assign({}, DEFAULT_INTL_CONFIG, { locale: 'en' }), createFormatters(), descriptor, values);\n};\nexport default class FormattedMessage extends React.Component {\n    constructor(props, context) {\n        super(props);\n        if (!props.defaultMessage) {\n            invariantIntlContext(context);\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        const _a = this.props, { values } = _a, otherProps = __rest(_a, [\"values\"]);\n        const { values: nextValues } = nextProps, nextOtherProps = __rest(nextProps, [\"values\"]);\n        return (!shallowEquals(nextValues, values) ||\n            !shallowEquals(otherProps, nextOtherProps));\n    }\n    render() {\n        const { formatMessage = defaultFormatMessage, textComponent: Text = React.Fragment, } = this.context || {};\n        const { id, description, defaultMessage, values, children, tagName: Component = Text, } = this.props;\n        const descriptor = { id, description, defaultMessage };\n        let nodes = formatMessage(descriptor, values);\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n        if (typeof children === 'function') {\n            return children(...nodes);\n        }\n        if (Component) {\n            // Needs to use `createElement()` instead of JSX, otherwise React will\n            // warn about a missing `key` prop with rich-text message formatting.\n            return React.createElement(Component, null, ...nodes);\n        }\n        return nodes;\n    }\n}\nFormattedMessage.defaultProps = {\n    values: {},\n};\nFormattedMessage.displayName = 'FormattedMessage';\nFormattedMessage.contextType = Context;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport FormattedMessage from './message';\nexport default class FormattedHTMLMessage extends FormattedMessage {\n    render() {\n        const { formatHTMLMessage, textComponent: Text } = this.context;\n        const { id, description, defaultMessage, values: rawValues, \n        // This is bc of TS3.3 doesn't recognize `defaultProps`\n        tagName: Component = Text || 'span', children, } = this.props;\n        let descriptor = { id, description, defaultMessage };\n        let formattedHTMLMessage = formatHTMLMessage(descriptor, rawValues);\n        if (typeof children === 'function') {\n            return children(formattedHTMLMessage);\n        }\n        // Since the message presumably has HTML in it, we need to set\n        // `innerHTML` in order for it to be rendered and not escaped by React.\n        // To be safe, all string prop values were escaped when formatting the\n        // message. It is assumed that the message is not UGC, and came from the\n        // developer making it more like a template.\n        //\n        // Note: There's a perf impact of using this component since there's no\n        // way for React to do its virtual DOM diffing.\n        const html = { __html: formattedHTMLMessage };\n        return React.createElement(Component, { dangerouslySetInnerHTML: html });\n    }\n}\nFormattedHTMLMessage.defaultProps = Object.assign({}, FormattedMessage.defaultProps, { tagName: 'span' });\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nexport { default as defineMessages } from './define-messages';\nimport createFormattedComponent from './components/createFormattedComponent';\nexport { default as injectIntl, Provider as RawIntlProvider, Context as IntlContext, } from './components/injectIntl';\nexport { default as useIntl } from './components/useIntl';\nexport { default as IntlProvider, createIntl } from './components/provider';\nexport const { Component: FormattedDate } = createFormattedComponent('formatDate');\nexport const { Component: FormattedTime } = createFormattedComponent('formatTime');\nexport const { Component: FormattedNumber } = createFormattedComponent('formatNumber');\nexport { default as FormattedRelativeTime } from './components/relative';\nexport { default as FormattedPlural } from './components/plural';\nexport { default as FormattedMessage } from './components/message';\nexport { default as FormattedHTMLMessage } from './components/html-message';\nexport { createIntlCache } from './utils';\n"],"names":["defineMessages","messageDescriptors","TYPE","isLiteralElement","el","type","literal","isArgumentElement","argument","isNumberElement","number","isDateElement","date","isTimeElement","time","isSelectElement","select","isPluralElement","plural","__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","SyntaxError","_super","message","expected","found","location","_this","name","Error","captureStackTrace","buildMessage","hex","ch","charCodeAt","toString","toUpperCase","literalEscape","replace","classEscape","describeExpectation","expectation","text","escapedParts","parts","map","part","isArray","inverted","description","describeExpected","expected1","descriptions","j","sort","slice","join","describeFound","found1","peg$parse","input","options","undefined","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","messageText","value","insertLocation","peg$c2","peg$otherExpectation","peg$c3","peg$c4","peg$literalExpectation","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$classExpectation","peg$c11","peg$anyExpectation","peg$c12","peg$c13","peg$c14","peg$c15","option","peg$c16","peg$c17","stem","peg$c18","tokens","peg$c19","peg$c20","peg$c21","skeleton","peg$c22","style","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","pattern","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","pluralType","offset","reduce","all","_a","id","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","digits","parseInt","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","escapedChar","quotedChars","peg$c67","peg$c68","peg$c69","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","peg$computeLocation","text1","ignoreCase","peg$endExpectation","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","end","peg$fail","push","peg$buildStructuredError","location1","s0","peg$parsemessage","s1","peg$parsemessageElement","peg$parseliteralElement","peg$parseargumentElement","peg$parsesimpleFormatElement","peg$parsepluralElement","peg$parseselectElement","peg$parsemessageText","s2","peg$parsedoubleApostrophes","peg$parsequotedString","peg$parseunquotedString","peg$parseargName","peg$parsenumber","peg$parsekeyword","substring","s3","s4","s5","peg$parse_","peg$parsenumberSkeletonId","peg$parsepatternWhiteSpace","test","charAt","peg$parsenumberSkeletonTokenOption","peg$parsenumberSkeletonToken","peg$parsenumberSkeleton","peg$parsenumberArgStyle","substr","peg$parsenumberFormatElement","s6","s7","s8","s9","s10","s11","s12","peg$parsedateOrTimeSkeleton","peg$parsedateOrTimeArgStyle","peg$parsedateOrTimeFormatElement","s13","s14","s15","peg$parsepluralOption","peg$parseselectOption","peg$parsepluralRuleSelectValue","peg$parsepatternSyntax","captureLocation","parse","PLURAL_HASHTAG_REGEX","normalizeHashtagInPlural","els","forEach","keys","opt","matchingLiteralElIndex","literalEl","el_1","newValue","newEls","splice","concat","opts","pegParse","getCacheId","inputs","JSON","stringify","orderedProps","obj","k","memoizeFormatConstructor","FormatConstructor","cache","args","_i","cacheId","format","bind","ESCAPE_HASH_REGEX","FormatError","msg","variableId","mergeLiteral","lastPart","formatToParts","locales","formatters","formats","values","originalMessage","result","els_1","varName","String","getDateTimeFormat","getNumberFormat","other","RangeError","rule","getPluralRules","formatToString","domParser","TOKEN_DELIMITER","TOKEN_REGEX","counter","generateId","Date","now","restoreRichPlaceholderMessage","objectParts","split","filter","Boolean","c","formatXMLMessage","formattedMessage","indexOf","DOMParser","dom","parseFromString","getElementsByTagName","innerHTML","content","firstChild","tagsToFormat","childNodes","reconstructedChunks","tagName","outerHTML","textContent","chunks","formatFnOrValue","resolveLocale","Intl","NumberFormat","supportedLocalesOf","localeMatcher","e","IntlMessageFormat","defaultLocale","prewarmFormatters","mergeConfig","c1","c2","mergeConfigs","defaultConfig","configs","createDefaultFormatters","dateTime","pluralRules","memoizeIntlConstructor","DateTimeFormat","PluralRules","overrideFormats","formatterCache","ast","locale","resolvedOptions","getAst","__parse","TypeError","currency","percent","short","month","day","year","medium","long","full","weekday","hour","minute","second","timeZoneName","invariant","require","ESCAPED_CHARS","UNSAFE_CHARS_REGEX","escape","str","match","filterProps","props","whitelist","defaults","filtered","invariantIntlContext","intl","createError","exception","eMsg","stack","defaultErrorHandler","error","process","env","NODE_ENV","console","DEFAULT_INTL_CONFIG","messages","timeZone","textComponent","React","defaultFormats","onError","createIntlCache","relativeTime","createFormatters","getMessageFormat","getRelativeTimeFormat","RelativeTimeFormat","hoistNonReactStatics","getDisplayName","Component","displayName","IntlContext","IntlConsumer","Consumer","IntlProvider","Provider","Context","injectIntl","WrappedComponent","intlPropName","forwardRef","enforceContext","WithIntl","ref","forwardedRef","createFormattedComponent","children","formatFn","Text","formattedValue","withIntl","useIntl","useContext","DATE_TIME_FORMAT_OPTIONS","NUMBER_FORMAT_OPTIONS","RELATIVE_FORMAT_OPTIONS","PLURAL_FORMAT_OPTIONS","getNamedFormat","formatType","escapeUnformattedMessage","formatDate","state","filteredOptions","formatTime","formatRelativeTime","unit","formatNumber","formatPlural","formatMessage","messageDescriptor","defaultMessage","hasValues","val","formattedMessageParts","formatter","toLowerCase","formatHTMLMessage","config","rawValues","escapedValues","escaped","DEFAULT_CONSTRUCTORS","areIntlLocalesSupported","constructorsToCheck","intlConstructors","every","intlConstructor","shallowEquals","prevProps","filteredProps","createIntl","defaultProps","resolvedConfig","MINUTE","HOUR","DAY","selectUnit","seconds","absValue","Math","abs","getDurationInSeconds","valueToSeconds","INCREMENTABLE_UNITS","canIncrement","includes","verifyProps","updateIntervalInSeconds","FormattedRelativeTime","context","_updateTimer","prevUnit","prevValue","currentValueInSeconds","clearTimeout","nextValueInSeconds","nextUnit","unitDuration","remainder","prevInterestingValueInSeconds","nextInterestingValueInSeconds","delayInSeconds","setTimeout","setState","scheduleNextUpdate","currentValue","currentUnit","round","formattedRelativeTime","contextType","FormattedPlural","pluralCategory","formattedPlural","__rest","getOwnPropertySymbols","defaultFormatMessage","descriptor","baseFormatMessage","FormattedMessage","nextProps","otherProps","nextValues","nextOtherProps","nodes","FormattedHTMLMessage","formattedHTMLMessage","html","__html","dangerouslySetInnerHTML","FormattedDate","FormattedTime","FormattedNumber"],"mappings":"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"}